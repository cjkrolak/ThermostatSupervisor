# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
- develop

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    # Python27:
    #  python.version: '2.7'
    #Python35:  # not compatible with pyhtcc
    #  python.version: '3.5'
    #Python36:
    #  python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python -m pip install flake8
    flake8 .
  displayName: 'Run lint tests'
#  workingDirectory: 
#- script: |
#    pip install pytest pytest-azurepipelines
#    pytest
#  displayName: 'pytest'

# python unit tests
- script: |
    python -m unittest discover -v
  displayName: 'Unit Tests'
  env:
    GMAIL_USERNAME: '$(GMAIL_USERNAME)'  # used for some unit tests
    GMAIL_PASSWORD: '$(GMAIL_PASSWORD)'  # used for some unit test
    # TCC_USERNAME: '$(TCC_USERNAME)'
    # TCC_PASSWORD: '$(TCC_PASSWORD)'
    # SHT31_REMOTE_IP_ADDRESS_1: '$(SHT31_REMOTE_IP_ADDRESS_1)'
    # SHT31_REMOTE_IP_ADDRESS_99: '$(SHT31_REMOTE_IP_ADDRESS_99)'
    # KUMO_USERNAME: '$(KUMO_USERNAME)'
    # KUMO_PASSWORD: '$(KUMO_PASSWORD)'
 

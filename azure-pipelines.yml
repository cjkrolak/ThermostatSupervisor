# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

# pool:
#   vmImage: ubuntu-default
variables:
  GMAIL_USERNAME: '$(GMAIL_USERNAME1)'
  GMAIL_PASSWORD: '$(GMAIL_PASSWORD1)'
  TCC_USERNAME: '$(TCC_USERNAME1)'
  TCC_PASSWORD: '$(TCC_PASSWORD1)'

strategy:
  matrix:
    # Python27:
    #  python.version: '2.7'
    #Python35:  # not compatible with pyhtcc
    #  python.version: '3.5'
    #Python36:
    #  python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python -m pip install flake8
    flake8 .
  displayName: 'Run lint tests'
#  workingDirectory: 
#- script: |
#    pip install pytest pytest-azurepipelines
#    pytest
#  displayName: 'pytest'

# python unit tests
- script: echo $(GMAIL_USERNAME)
- script: echo $(GMAIL_PASSWORD)
- script: echo $(TCC_USERNAME)
- script: echo $(TCC_PASSWORD)
- script: echo GMAIL username is ${{ variables.GMAIL_USERNAME}}.
- script: echo GMAIL pwd is ${{ variables.GMAIL_PASSWORD}}.
- script: echo TCC username is ${{ variables.TCC_USERNAME}}.
- script: echo TCC password is ${{ variables.TCC_PASSWORD}}.
- script: python -m unittest test_email_notification.py

Search.setIndex({"alltitles": {"Module contents": [[1, "module-thermostatsupervisor"]], "Submodules": [[1, "submodules"]], "ThermostatSupervisor documentation": [[2, null]], "thermostatsupervisor": [[0, null]], "thermostatsupervisor package": [[1, null]], "thermostatsupervisor.blink module": [[1, "module-thermostatsupervisor.blink"]], "thermostatsupervisor.blink_config module": [[1, "module-thermostatsupervisor.blink_config"]], "thermostatsupervisor.blink_debug module": [[1, "thermostatsupervisor-blink-debug-module"]], "thermostatsupervisor.email_notification module": [[1, "module-thermostatsupervisor.email_notification"]], "thermostatsupervisor.emulator module": [[1, "module-thermostatsupervisor.emulator"]], "thermostatsupervisor.emulator_config module": [[1, "module-thermostatsupervisor.emulator_config"]], "thermostatsupervisor.environment module": [[1, "module-thermostatsupervisor.environment"]], "thermostatsupervisor.flask_generic module": [[1, "module-thermostatsupervisor.flask_generic"]], "thermostatsupervisor.honeywell module": [[1, "module-thermostatsupervisor.honeywell"]], "thermostatsupervisor.honeywell_config module": [[1, "module-thermostatsupervisor.honeywell_config"]], "thermostatsupervisor.kumocloud module": [[1, "module-thermostatsupervisor.kumocloud"]], "thermostatsupervisor.kumocloud_config module": [[1, "module-thermostatsupervisor.kumocloud_config"]], "thermostatsupervisor.kumolocal module": [[1, "module-thermostatsupervisor.kumolocal"]], "thermostatsupervisor.kumolocal_config module": [[1, "module-thermostatsupervisor.kumolocal_config"]], "thermostatsupervisor.mmm module": [[1, "module-thermostatsupervisor.mmm"]], "thermostatsupervisor.mmm_config module": [[1, "module-thermostatsupervisor.mmm_config"]], "thermostatsupervisor.nest module": [[1, "module-thermostatsupervisor.nest"]], "thermostatsupervisor.nest_config module": [[1, "module-thermostatsupervisor.nest_config"]], "thermostatsupervisor.sht31 module": [[1, "module-thermostatsupervisor.sht31"]], "thermostatsupervisor.sht31_config module": [[1, "module-thermostatsupervisor.sht31_config"]], "thermostatsupervisor.sht31_flask_server module": [[1, "module-thermostatsupervisor.sht31_flask_server"]], "thermostatsupervisor.supervise module": [[1, "module-thermostatsupervisor.supervise"]], "thermostatsupervisor.supervisor_flask_server module": [[1, "module-thermostatsupervisor.supervisor_flask_server"]], "thermostatsupervisor.thermostat_api module": [[1, "module-thermostatsupervisor.thermostat_api"]], "thermostatsupervisor.thermostat_common module": [[1, "module-thermostatsupervisor.thermostat_common"]], "thermostatsupervisor.utilities module": [[1, "module-thermostatsupervisor.utilities"]]}, "docnames": ["docs/modules", "docs/thermostatsupervisor", "index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["docs\\modules.rst", "docs\\thermostatsupervisor.rst", "index.rst"], "indexentries": {"async_auth_start() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.async_auth_start", false]], "auth_start() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.auth_start", false]], "authenticationerror": [[1, "thermostatsupervisor.thermostat_common.AuthenticationError", false]], "auto_mode (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.AUTO_MODE", false]], "c_to_f() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.c_to_f", false]], "clearfaultregister (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.ClearFaultRegister", false]], "controlled_modes (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.controlled_modes", false]], "controller (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.Controller", false]], "controllerunit (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.ControllerUnit", false]], "convert_data() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.convert_data", false]], "convert_to_absolute_path() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.convert_to_absolute_path", false]], "cool_mode (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.COOL_MODE", false]], "cool_modes (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.cool_modes", false]], "create_app() (in module thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.create_app", false]], "create_app() (in module thermostatsupervisor.supervisor_flask_server)": [[1, "thermostatsupervisor.supervisor_flask_server.create_app", false]], "create_thermostat_instance() (in module thermostatsupervisor.thermostat_common)": [[1, "thermostatsupervisor.thermostat_common.create_thermostat_instance", false]], "disableheater (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.DisableHeater", false]], "display_basic_thermostat_summary() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.display_basic_thermostat_summary", false]], "display_runtime_settings() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.display_runtime_settings", false]], "display_session_settings() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.display_session_settings", false]], "dry_mode (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.DRY_MODE", false]], "dynamic_module_import() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.dynamic_module_import", false]], "dynamic_update_user_inputs() (thermostatsupervisor.thermostat_api.userinputs method)": [[1, "thermostatsupervisor.thermostat_api.UserInputs.dynamic_update_user_inputs", false]], "dynamic_update_user_inputs() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.dynamic_update_user_inputs", false]], "enableheater (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.EnableHeater", false]], "endpoint (thermostatsupervisor.sht31_flask_server.clearfaultregister attribute)": [[1, "thermostatsupervisor.sht31_flask_server.ClearFaultRegister.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.controller attribute)": [[1, "thermostatsupervisor.sht31_flask_server.Controller.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.controllerunit attribute)": [[1, "thermostatsupervisor.sht31_flask_server.ControllerUnit.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.disableheater attribute)": [[1, "thermostatsupervisor.sht31_flask_server.DisableHeater.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.enableheater attribute)": [[1, "thermostatsupervisor.sht31_flask_server.EnableHeater.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.i2cdetect attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetect.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.i2cdetectbus0 attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus0.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.i2cdetectbus1 attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus1.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.i2crecovery attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CRecovery.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.readfaultregister attribute)": [[1, "thermostatsupervisor.sht31_flask_server.ReadFaultRegister.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.reset attribute)": [[1, "thermostatsupervisor.sht31_flask_server.Reset.endpoint", false]], "endpoint (thermostatsupervisor.sht31_flask_server.softreset attribute)": [[1, "thermostatsupervisor.sht31_flask_server.SoftReset.endpoint", false]], "exec_print_all_thermostat_metadata() (thermostatsupervisor.thermostat_common.thermostatcommon method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommon.exec_print_all_thermostat_metadata", false]], "exec_supervise() (in module thermostatsupervisor.supervise)": [[1, "thermostatsupervisor.supervise.exec_supervise", false]], "f_to_c() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.f_to_c", false]], "fan_mode (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.FAN_MODE", false]], "favicon() (in module thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.favicon", false]], "favicon() (in module thermostatsupervisor.supervisor_flask_server)": [[1, "thermostatsupervisor.supervisor_flask_server.favicon", false]], "function_not_supported() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.function_not_supported", false]], "get() (thermostatsupervisor.sht31_flask_server.clearfaultregister method)": [[1, "thermostatsupervisor.sht31_flask_server.ClearFaultRegister.get", false]], "get() (thermostatsupervisor.sht31_flask_server.controller method)": [[1, "thermostatsupervisor.sht31_flask_server.Controller.get", false]], "get() (thermostatsupervisor.sht31_flask_server.controllerunit method)": [[1, "thermostatsupervisor.sht31_flask_server.ControllerUnit.get", false]], "get() (thermostatsupervisor.sht31_flask_server.disableheater method)": [[1, "thermostatsupervisor.sht31_flask_server.DisableHeater.get", false]], "get() (thermostatsupervisor.sht31_flask_server.enableheater method)": [[1, "thermostatsupervisor.sht31_flask_server.EnableHeater.get", false]], "get() (thermostatsupervisor.sht31_flask_server.i2cdetect method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetect.get", false]], "get() (thermostatsupervisor.sht31_flask_server.i2cdetectbus0 method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus0.get", false]], "get() (thermostatsupervisor.sht31_flask_server.i2cdetectbus1 method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus1.get", false]], "get() (thermostatsupervisor.sht31_flask_server.i2crecovery method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CRecovery.get", false]], "get() (thermostatsupervisor.sht31_flask_server.readfaultregister method)": [[1, "thermostatsupervisor.sht31_flask_server.ReadFaultRegister.get", false]], "get() (thermostatsupervisor.sht31_flask_server.reset method)": [[1, "thermostatsupervisor.sht31_flask_server.Reset.get", false]], "get() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.get", false]], "get() (thermostatsupervisor.sht31_flask_server.softreset method)": [[1, "thermostatsupervisor.sht31_flask_server.SoftReset.get", false]], "get_all_metadata() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.emulator.thermostatclass method)": [[1, "thermostatsupervisor.emulator.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.kumocloud.thermostatclass method)": [[1, "thermostatsupervisor.kumocloud.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.kumolocal.thermostatclass method)": [[1, "thermostatsupervisor.kumolocal.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.sht31.thermostatclass method)": [[1, "thermostatsupervisor.sht31.ThermostatClass.get_all_metadata", false]], "get_all_metadata() (thermostatsupervisor.thermostat_common.thermostatcommon method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommon.get_all_metadata", false]], "get_available_zones() (in module thermostatsupervisor.blink_config)": [[1, "thermostatsupervisor.blink_config.get_available_zones", false]], "get_available_zones() (in module thermostatsupervisor.emulator_config)": [[1, "thermostatsupervisor.emulator_config.get_available_zones", false]], "get_available_zones() (in module thermostatsupervisor.honeywell_config)": [[1, "thermostatsupervisor.honeywell_config.get_available_zones", false]], "get_available_zones() (in module thermostatsupervisor.kumocloud_config)": [[1, "thermostatsupervisor.kumocloud_config.get_available_zones", false]], "get_available_zones() (in module thermostatsupervisor.kumolocal_config)": [[1, "thermostatsupervisor.kumolocal_config.get_available_zones", false]], "get_available_zones() (in module thermostatsupervisor.mmm_config)": [[1, "thermostatsupervisor.mmm_config.get_available_zones", false]], "get_available_zones() (in module thermostatsupervisor.nest_config)": [[1, "thermostatsupervisor.nest_config.get_available_zones", false]], "get_available_zones() (in module thermostatsupervisor.sht31_config)": [[1, "thermostatsupervisor.sht31_config.get_available_zones", false]], "get_battery_status() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_battery_status", false]], "get_battery_status() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_battery_status", false]], "get_battery_status() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_battery_status", false]], "get_battery_status() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_battery_status", false]], "get_battery_status() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_battery_status", false]], "get_battery_status_display() (in module thermostatsupervisor.thermostat_common)": [[1, "thermostatsupervisor.thermostat_common.get_battery_status_display", false]], "get_battery_voltage() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_battery_voltage", false]], "get_battery_voltage() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_battery_voltage", false]], "get_battery_voltage() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_battery_voltage", false]], "get_battery_voltage() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_battery_voltage", false]], "get_battery_voltage() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_battery_voltage", false]], "get_cameras() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.get_cameras", false]], "get_cool_setpoint() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_cool_setpoint", false]], "get_cool_setpoint() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_cool_setpoint", false]], "get_cool_setpoint() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_cool_setpoint", false]], "get_cool_setpoint() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_cool_setpoint", false]], "get_cool_setpoint() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_cool_setpoint", false]], "get_cool_setpoint() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_cool_setpoint", false]], "get_cool_setpoint_raw() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_cool_setpoint_raw", false]], "get_cool_setpoint_raw() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_cool_setpoint_raw", false]], "get_cool_setpoint_raw() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_cool_setpoint_raw", false]], "get_cool_setpoint_raw() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_cool_setpoint_raw", false]], "get_cool_setpoint_raw() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_cool_setpoint_raw", false]], "get_cool_setpoint_raw() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_cool_setpoint_raw", false]], "get_current_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_current_mode", false]], "get_device_data() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.get_device_data", false]], "get_display_humidity() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_display_humidity", false]], "get_display_humidity() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_display_humidity", false]], "get_display_temp() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_display_temp", false]], "get_display_temp() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_display_temp", false]], "get_env_key() (thermostatsupervisor.sht31.thermostatclass method)": [[1, "thermostatsupervisor.sht31.ThermostatClass.get_env_key", false]], "get_env_variable() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.get_env_variable", false]], "get_file_size_bytes() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.get_file_size_bytes", false]], "get_full_file_path() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.get_full_file_path", false]], "get_function_name() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.get_function_name", false]], "get_heat_setpoint() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_heat_setpoint", false]], "get_heat_setpoint() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_heat_setpoint", false]], "get_heat_setpoint() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_heat_setpoint", false]], "get_heat_setpoint() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_heat_setpoint", false]], "get_heat_setpoint() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_heat_setpoint", false]], "get_heat_setpoint() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_heat_setpoint", false]], "get_heat_setpoint_raw() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_heat_setpoint_raw", false]], "get_heat_setpoint_raw() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_heat_setpoint_raw", false]], "get_heat_setpoint_raw() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_heat_setpoint_raw", false]], "get_heat_setpoint_raw() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_heat_setpoint_raw", false]], "get_heat_setpoint_raw() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_heat_setpoint_raw", false]], "get_heat_setpoint_raw() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_heat_setpoint_raw", false]], "get_ip_address() (thermostatsupervisor.sht31.thermostatclass method)": [[1, "thermostatsupervisor.sht31.ThermostatClass.get_ip_address", false]], "get_is_humidity_supported() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_is_humidity_supported", false]], "get_is_humidity_supported() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_is_humidity_supported", false]], "get_is_invacation_hold_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_is_invacation_hold_mode", false]], "get_is_invacation_hold_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_is_invacation_hold_mode", false]], "get_is_invacation_hold_mode() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_is_invacation_hold_mode", false]], "get_is_invacation_hold_mode() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_is_invacation_hold_mode", false]], "get_is_invacation_hold_mode() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_is_invacation_hold_mode", false]], "get_is_invacation_hold_mode() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_is_invacation_hold_mode", false]], "get_is_invacation_hold_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_is_invacation_hold_mode", false]], "get_iwconfig_wifi_strength() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.get_iwconfig_wifi_strength", false]], "get_iwlist_wifi_strength() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.get_iwlist_wifi_strength", false]], "get_key_from_value() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.get_key_from_value", false]], "get_kumocloud_thermostat_metadata() (thermostatsupervisor.kumolocal.thermostatclass method)": [[1, "thermostatsupervisor.kumolocal.ThermostatClass.get_kumocloud_thermostat_metadata", false]], "get_latestdata() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.get_latestdata", false]], "get_latestdata() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.get_latestdata", false]], "get_local_ip() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.get_local_ip", false]], "get_meta_data_dict() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.get_meta_data_dict", false]], "get_metadata() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.emulator.thermostatclass method)": [[1, "thermostatsupervisor.emulator.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.kumocloud.thermostatclass method)": [[1, "thermostatsupervisor.kumocloud.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.kumolocal.thermostatclass method)": [[1, "thermostatsupervisor.kumolocal.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.sht31.thermostatclass method)": [[1, "thermostatsupervisor.sht31.ThermostatClass.get_metadata", false]], "get_metadata() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_metadata", false]], "get_metadata() (thermostatsupervisor.thermostat_common.thermostatcommon method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommon.get_metadata", false]], "get_package_path() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.get_package_path", false]], "get_package_version() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.get_package_version", false]], "get_parameter() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_parameter", false]], "get_parameter() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_parameter", false]], "get_parent_path() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.get_parent_path", false]], "get_preferred_zone() (in module thermostatsupervisor.sht31_config)": [[1, "thermostatsupervisor.sht31_config.get_preferred_zone", false]], "get_previous_days_setpoint() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_previous_days_setpoint", false]], "get_python_version() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.get_python_version", false]], "get_safety_temperature() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_safety_temperature", false]], "get_schedule_cool_sp() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_schedule_cool_sp", false]], "get_schedule_cool_sp() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_schedule_cool_sp", false]], "get_schedule_cool_sp() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_schedule_cool_sp", false]], "get_schedule_cool_sp() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_schedule_cool_sp", false]], "get_schedule_cool_sp() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_schedule_cool_sp", false]], "get_schedule_cool_sp() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_schedule_cool_sp", false]], "get_schedule_cool_sp() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_schedule_cool_sp", false]], "get_schedule_heat_sp() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_schedule_heat_sp", false]], "get_schedule_heat_sp() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_schedule_heat_sp", false]], "get_schedule_heat_sp() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_schedule_heat_sp", false]], "get_schedule_heat_sp() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_schedule_heat_sp", false]], "get_schedule_heat_sp() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_schedule_heat_sp", false]], "get_schedule_heat_sp() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_schedule_heat_sp", false]], "get_schedule_heat_sp() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_schedule_heat_sp", false]], "get_schedule_program_cool() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_schedule_program_cool", false]], "get_schedule_program_cool() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_schedule_program_cool", false]], "get_schedule_program_heat() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_schedule_program_heat", false]], "get_schedule_program_heat() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_schedule_program_heat", false]], "get_schedule_setpoint() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_schedule_setpoint", false]], "get_setpoint_change_allowed() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_setpoint_change_allowed", false]], "get_setpoint_change_allowed() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_setpoint_change_allowed", false]], "get_setpoint_list() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_setpoint_list", false]], "get_sflag_list() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.get_sflag_list", false]], "get_system_switch_position() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_system_switch_position", false]], "get_system_switch_position() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_system_switch_position", false]], "get_target_zone_id() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.get_target_zone_id", false]], "get_target_zone_id() (thermostatsupervisor.emulator.thermostatclass method)": [[1, "thermostatsupervisor.emulator.ThermostatClass.get_target_zone_id", false]], "get_target_zone_id() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.get_target_zone_id", false]], "get_target_zone_id() (thermostatsupervisor.kumocloud.thermostatclass method)": [[1, "thermostatsupervisor.kumocloud.ThermostatClass.get_target_zone_id", false]], "get_target_zone_id() (thermostatsupervisor.kumolocal.thermostatclass method)": [[1, "thermostatsupervisor.kumolocal.ThermostatClass.get_target_zone_id", false]], "get_target_zone_id() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.get_target_zone_id", false]], "get_target_zone_id() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.get_target_zone_id", false]], "get_target_zone_id() (thermostatsupervisor.sht31.thermostatclass method)": [[1, "thermostatsupervisor.sht31.ThermostatClass.get_target_zone_id", false]], "get_temporary_hold_until_time() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_temporary_hold_until_time", false]], "get_temporary_hold_until_time() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_temporary_hold_until_time", false]], "get_temporary_hold_until_time() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_temporary_hold_until_time", false]], "get_trait() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_trait", false]], "get_ui_data() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.get_ui_data", false]], "get_ui_data() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.get_ui_data", false]], "get_ui_data_param() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.get_ui_data_param", false]], "get_ui_data_param() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.get_ui_data_param", false]], "get_unit_test() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.get_unit_test", false]], "get_user_inputs() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.get_user_inputs", false]], "get_vacation_hold() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_vacation_hold", false]], "get_vacation_hold() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_vacation_hold", false]], "get_vacation_hold() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_vacation_hold", false]], "get_vacation_hold() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_vacation_hold", false]], "get_vacation_hold() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_vacation_hold", false]], "get_vacation_hold() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_vacation_hold", false]], "get_vacation_hold() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_vacation_hold", false]], "get_vacation_hold_until_time() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_vacation_hold_until_time", false]], "get_vacation_hold_until_time() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_vacation_hold_until_time", false]], "get_vacation_hold_until_time() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_vacation_hold_until_time", false]], "get_wifi_status() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_wifi_status", false]], "get_wifi_status() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_wifi_status", false]], "get_wifi_status() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_wifi_status", false]], "get_wifi_status() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_wifi_status", false]], "get_wifi_status() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_wifi_status", false]], "get_wifi_status() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_wifi_status", false]], "get_wifi_status_display() (in module thermostatsupervisor.thermostat_common)": [[1, "thermostatsupervisor.thermostat_common.get_wifi_status_display", false]], "get_wifi_strength() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_wifi_strength", false]], "get_wifi_strength() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_wifi_strength", false]], "get_wifi_strength() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_wifi_strength", false]], "get_wifi_strength() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_wifi_strength", false]], "get_wifi_strength() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_wifi_strength", false]], "get_wifi_strength() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.get_wifi_strength", false]], "get_zone_index_from_name() (thermostatsupervisor.kumocloud.thermostatclass method)": [[1, "thermostatsupervisor.kumocloud.ThermostatClass.get_zone_index_from_name", false]], "get_zone_name() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.kumolocal.thermostatclass method)": [[1, "thermostatsupervisor.kumolocal.ThermostatClass.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.get_zone_name", false]], "get_zone_name() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.get_zone_name", false]], "get_zones_info() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.get_zones_info", false]], "get_zones_info_with_retries() (in module thermostatsupervisor.honeywell)": [[1, "thermostatsupervisor.honeywell.get_zones_info_with_retries", false]], "heat_mode (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.HEAT_MODE", false]], "heat_modes (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.heat_modes", false]], "humidity_value_with_units() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.humidity_value_with_units", false]], "i2c_detect() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.i2c_detect", false]], "i2c_recovery() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.i2c_recovery", false]], "i2cdetect (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetect", false]], "i2cdetectbus0 (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus0", false]], "i2cdetectbus1 (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus1", false]], "i2crecovery (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.I2CRecovery", false]], "index() (in module thermostatsupervisor.supervisor_flask_server)": [[1, "thermostatsupervisor.supervisor_flask_server.index", false]], "initialize_ipban() (in module thermostatsupervisor.flask_generic)": [[1, "thermostatsupervisor.flask_generic.initialize_ipban", false]], "initialize_meta_data_dict() (thermostatsupervisor.emulator.thermostatclass method)": [[1, "thermostatsupervisor.emulator.ThermostatClass.initialize_meta_data_dict", false]], "initialize_meta_data_dict() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.initialize_meta_data_dict", false]], "initialize_user_inputs() (thermostatsupervisor.sht31_flask_server.userinputs method)": [[1, "thermostatsupervisor.sht31_flask_server.UserInputs.initialize_user_inputs", false]], "initialize_user_inputs() (thermostatsupervisor.thermostat_api.userinputs method)": [[1, "thermostatsupervisor.thermostat_api.UserInputs.initialize_user_inputs", false]], "initialize_user_inputs() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.initialize_user_inputs", false]], "is_auto() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_auto", false]], "is_auto() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_auto", false]], "is_auto_mode() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_auto_mode", false]], "is_auto_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_auto_mode", false]], "is_azure_environment() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.is_azure_environment", false]], "is_controlled_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_controlled_mode", false]], "is_cool_deviation() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_cool_deviation", false]], "is_cool_mode() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_cool_mode", false]], "is_cool_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_cool_mode", false]], "is_cooling() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_cooling", false]], "is_cooling() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_cooling", false]], "is_defrosting() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_defrosting", false]], "is_defrosting() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_defrosting", false]], "is_defrosting() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_defrosting", false]], "is_defrosting() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_defrosting", false]], "is_defrosting() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_defrosting", false]], "is_defrosting() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_defrosting", false]], "is_dry_mode() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_dry_mode", false]], "is_dry_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_dry_mode", false]], "is_drying() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_drying", false]], "is_drying() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_drying", false]], "is_fan_auto_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_fan_auto_mode", false]], "is_fan_circulate_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_fan_circulate_mode", false]], "is_fan_mode() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_fan_mode", false]], "is_fan_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_fan_mode", false]], "is_fan_on() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_fan_on", false]], "is_fan_on() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_fan_on", false]], "is_fan_on() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_fan_on", false]], "is_fan_on() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_fan_on", false]], "is_fan_on() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_fan_on", false]], "is_fan_on() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_fan_on", false]], "is_fan_on() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_fan_on", false]], "is_fan_on() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_fan_on", false]], "is_fan_on_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_fan_on_mode", false]], "is_fanning() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_fanning", false]], "is_fanning() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_fanning", false]], "is_heat_deviation() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_heat_deviation", false]], "is_heat_mode() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_heat_mode", false]], "is_heat_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_heat_mode", false]], "is_heating() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_heating", false]], "is_heating() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_heating", false]], "is_host_on_local_net() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.is_host_on_local_net", false]], "is_interactive_environment() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.is_interactive_environment", false]], "is_lambda_bool() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.is_lambda_bool", false]], "is_off_mode() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_off_mode", false]], "is_off_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_off_mode", false]], "is_off_mode() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_off_mode", false]], "is_off_mode() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_off_mode", false]], "is_off_mode() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_off_mode", false]], "is_off_mode() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_off_mode", false]], "is_off_mode() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_off_mode", false]], "is_off_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_off_mode", false]], "is_power_on() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_power_on", false]], "is_power_on() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_power_on", false]], "is_power_on() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.is_power_on", false]], "is_power_on() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_power_on", false]], "is_power_on() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_power_on", false]], "is_power_on() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_power_on", false]], "is_power_on() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.is_power_on", false]], "is_power_on() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_power_on", false]], "is_raspberrypi_environment() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.is_raspberrypi_environment", false]], "is_standby() (thermostatsupervisor.blink.thermostatzone method)": [[1, "thermostatsupervisor.blink.ThermostatZone.is_standby", false]], "is_standby() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.is_standby", false]], "is_standby() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.is_standby", false]], "is_standby() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.is_standby", false]], "is_standby() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.is_standby", false]], "is_standby() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.is_standby", false]], "is_temp_deviated_from_schedule() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.is_temp_deviated_from_schedule", false]], "is_valid_file() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.is_valid_file", false]], "is_windows_environment() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.is_windows_environment", false]], "load_all_env_variables() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.load_all_env_variables", false]], "load_hardware_library() (in module thermostatsupervisor.thermostat_api)": [[1, "thermostatsupervisor.thermostat_api.load_hardware_library", false]], "load_user_inputs() (in module thermostatsupervisor.thermostat_api)": [[1, "thermostatsupervisor.thermostat_api.load_user_inputs", false]], "log_msg() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.log_msg", false]], "log_rotate_file() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.log_rotate_file", false]], "max_measurement_count_exceeded() (thermostatsupervisor.thermostat_api.userinputs method)": [[1, "thermostatsupervisor.thermostat_api.UserInputs.max_measurement_count_exceeded", false]], "max_scheduled_heat_allowed (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.max_scheduled_heat_allowed", false]], "measure_thermostat_repeatability() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.measure_thermostat_repeatability", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.clearfaultregister method)": [[1, "thermostatsupervisor.sht31_flask_server.ClearFaultRegister.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.controller method)": [[1, "thermostatsupervisor.sht31_flask_server.Controller.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.controllerunit method)": [[1, "thermostatsupervisor.sht31_flask_server.ControllerUnit.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.disableheater method)": [[1, "thermostatsupervisor.sht31_flask_server.DisableHeater.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.enableheater method)": [[1, "thermostatsupervisor.sht31_flask_server.EnableHeater.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.i2cdetect method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetect.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.i2cdetectbus0 method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus0.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.i2cdetectbus1 method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus1.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.i2crecovery method)": [[1, "thermostatsupervisor.sht31_flask_server.I2CRecovery.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.readfaultregister method)": [[1, "thermostatsupervisor.sht31_flask_server.ReadFaultRegister.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.reset method)": [[1, "thermostatsupervisor.sht31_flask_server.Reset.mediatypes", false]], "mediatypes() (thermostatsupervisor.sht31_flask_server.softreset method)": [[1, "thermostatsupervisor.sht31_flask_server.SoftReset.mediatypes", false]], "methods (thermostatsupervisor.sht31_flask_server.clearfaultregister attribute)": [[1, "thermostatsupervisor.sht31_flask_server.ClearFaultRegister.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.controller attribute)": [[1, "thermostatsupervisor.sht31_flask_server.Controller.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.controllerunit attribute)": [[1, "thermostatsupervisor.sht31_flask_server.ControllerUnit.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.disableheater attribute)": [[1, "thermostatsupervisor.sht31_flask_server.DisableHeater.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.enableheater attribute)": [[1, "thermostatsupervisor.sht31_flask_server.EnableHeater.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.i2cdetect attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetect.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.i2cdetectbus0 attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus0.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.i2cdetectbus1 attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CDetectBus1.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.i2crecovery attribute)": [[1, "thermostatsupervisor.sht31_flask_server.I2CRecovery.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.readfaultregister attribute)": [[1, "thermostatsupervisor.sht31_flask_server.ReadFaultRegister.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.reset attribute)": [[1, "thermostatsupervisor.sht31_flask_server.Reset.methods", false]], "methods (thermostatsupervisor.sht31_flask_server.softreset attribute)": [[1, "thermostatsupervisor.sht31_flask_server.SoftReset.methods", false]], "min_scheduled_cool_allowed (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.min_scheduled_cool_allowed", false]], "module": [[1, "module-thermostatsupervisor", false], [1, "module-thermostatsupervisor.blink", false], [1, "module-thermostatsupervisor.blink_config", false], [1, "module-thermostatsupervisor.email_notification", false], [1, "module-thermostatsupervisor.emulator", false], [1, "module-thermostatsupervisor.emulator_config", false], [1, "module-thermostatsupervisor.environment", false], [1, "module-thermostatsupervisor.flask_generic", false], [1, "module-thermostatsupervisor.honeywell", false], [1, "module-thermostatsupervisor.honeywell_config", false], [1, "module-thermostatsupervisor.kumocloud", false], [1, "module-thermostatsupervisor.kumocloud_config", false], [1, "module-thermostatsupervisor.kumolocal", false], [1, "module-thermostatsupervisor.kumolocal_config", false], [1, "module-thermostatsupervisor.mmm", false], [1, "module-thermostatsupervisor.mmm_config", false], [1, "module-thermostatsupervisor.nest", false], [1, "module-thermostatsupervisor.nest_config", false], [1, "module-thermostatsupervisor.sht31", false], [1, "module-thermostatsupervisor.sht31_config", false], [1, "module-thermostatsupervisor.sht31_flask_server", false], [1, "module-thermostatsupervisor.supervise", false], [1, "module-thermostatsupervisor.supervisor_flask_server", false], [1, "module-thermostatsupervisor.thermostat_api", false], [1, "module-thermostatsupervisor.thermostat_common", false], [1, "module-thermostatsupervisor.utilities", false]], "off_mode (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.OFF_MODE", false]], "pack_data_structure() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.pack_data_structure", false]], "parse_argv_list() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.parse_argv_list", false]], "parse_fault_register_data() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.parse_fault_register_data", false]], "parse_input_file() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.parse_input_file", false]], "parse_named_arguments() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.parse_named_arguments", false]], "parse_runtime_parameters() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.parse_runtime_parameters", false]], "print_all_thermostat_metadata() (thermostatsupervisor.blink.thermostatclass method)": [[1, "thermostatsupervisor.blink.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.emulator.thermostatclass method)": [[1, "thermostatsupervisor.emulator.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.honeywell.thermostatclass method)": [[1, "thermostatsupervisor.honeywell.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.kumocloud.thermostatclass method)": [[1, "thermostatsupervisor.kumocloud.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.kumolocal.thermostatclass method)": [[1, "thermostatsupervisor.kumolocal.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.mmm.thermostatclass method)": [[1, "thermostatsupervisor.mmm.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.sht31.thermostatclass method)": [[1, "thermostatsupervisor.sht31.ThermostatClass.print_all_thermostat_metadata", false]], "print_all_thermostat_metadata() (thermostatsupervisor.thermostat_common.thermostatcommon method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommon.print_all_thermostat_metadata", false]], "print_flask_config() (in module thermostatsupervisor.flask_generic)": [[1, "thermostatsupervisor.flask_generic.print_flask_config", false]], "print_ipban_block_list() (in module thermostatsupervisor.flask_generic)": [[1, "thermostatsupervisor.flask_generic.print_ipban_block_list", false]], "print_ipban_block_list_with_timestamp() (in module thermostatsupervisor.flask_generic)": [[1, "thermostatsupervisor.flask_generic.print_ipban_block_list_with_timestamp", false]], "print_select_data_from_all_zones() (in module thermostatsupervisor.thermostat_common)": [[1, "thermostatsupervisor.thermostat_common.print_select_data_from_all_zones", false]], "query_thermostat_zone() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.query_thermostat_zone", false]], "read_i2c_data() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.read_i2c_data", false]], "readfaultregister (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.ReadFaultRegister", false]], "reautherize_callback() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.reautherize_callback", false]], "refresh_oauth_token() (thermostatsupervisor.nest.thermostatclass method)": [[1, "thermostatsupervisor.nest.ThermostatClass.refresh_oauth_token", false]], "refresh_zone_info() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.refresh_zone_info", false]], "refresh_zone_info() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.refresh_zone_info", false]], "refresh_zone_info() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.refresh_zone_info", false]], "refresh_zone_info() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.refresh_zone_info", false]], "refresh_zone_info() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.refresh_zone_info", false]], "refresh_zone_info() (thermostatsupervisor.sht31.thermostatzone method)": [[1, "thermostatsupervisor.sht31.ThermostatZone.refresh_zone_info", false]], "refresh_zone_info() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.refresh_zone_info", false]], "report_heating_parameters() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.report_heating_parameters", false]], "reset (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.Reset", false]], "revert_temperature_deviation() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.revert_temperature_deviation", false]], "revert_thermostat_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.revert_thermostat_mode", false]], "schedule_ipban_block_list_report() (in module thermostatsupervisor.flask_generic)": [[1, "thermostatsupervisor.flask_generic.schedule_ipban_block_list_report", false]], "send() (thermostatsupervisor.honeywell.timeouthttpadapter method)": [[1, "thermostatsupervisor.honeywell.TimeoutHTTPAdapter.send", false]], "send_cmd() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.send_cmd", false]], "send_cmd_get_diag() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.send_cmd_get_diag", false]], "send_email_alert() (in module thermostatsupervisor.email_notification)": [[1, "thermostatsupervisor.email_notification.send_email_alert", false]], "send_i2c_cmd() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.send_i2c_cmd", false]], "sensors (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors", false]], "set_cool_setpoint() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.set_cool_setpoint", false]], "set_cool_setpoint() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.set_cool_setpoint", false]], "set_cool_setpoint() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.set_cool_setpoint", false]], "set_cool_setpoint() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.set_cool_setpoint", false]], "set_cool_setpoint() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.set_cool_setpoint", false]], "set_cool_setpoint() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.set_cool_setpoint", false]], "set_cool_setpoint() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.set_cool_setpoint", false]], "set_env_variable() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.set_env_variable", false]], "set_flask_cookie_config() (in module thermostatsupervisor.flask_generic)": [[1, "thermostatsupervisor.flask_generic.set_flask_cookie_config", false]], "set_heat_setpoint() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.set_heat_setpoint", false]], "set_heat_setpoint() (thermostatsupervisor.honeywell.thermostatzone method)": [[1, "thermostatsupervisor.honeywell.ThermostatZone.set_heat_setpoint", false]], "set_heat_setpoint() (thermostatsupervisor.kumocloud.thermostatzone method)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone.set_heat_setpoint", false]], "set_heat_setpoint() (thermostatsupervisor.kumolocal.thermostatzone method)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone.set_heat_setpoint", false]], "set_heat_setpoint() (thermostatsupervisor.mmm.thermostatzone method)": [[1, "thermostatsupervisor.mmm.ThermostatZone.set_heat_setpoint", false]], "set_heat_setpoint() (thermostatsupervisor.nest.thermostatzone method)": [[1, "thermostatsupervisor.nest.ThermostatZone.set_heat_setpoint", false]], "set_heat_setpoint() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.set_heat_setpoint", false]], "set_mode() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.set_mode", false]], "set_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.set_mode", false]], "set_parameter() (thermostatsupervisor.emulator.thermostatzone method)": [[1, "thermostatsupervisor.emulator.ThermostatZone.set_parameter", false]], "set_sht31_address() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.set_sht31_address", false]], "set_user_inputs() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.set_user_inputs", false]], "shell_cmd() (thermostatsupervisor.sht31_flask_server.sensors method)": [[1, "thermostatsupervisor.sht31_flask_server.Sensors.shell_cmd", false]], "show_package_version() (in module thermostatsupervisor.environment)": [[1, "thermostatsupervisor.environment.show_package_version", false]], "softreset (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.SoftReset", false]], "spawn_flask_server() (thermostatsupervisor.sht31.thermostatclass method)": [[1, "thermostatsupervisor.sht31.ThermostatClass.spawn_flask_server", false]], "store_current_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.store_current_mode", false]], "supervisor() (in module thermostatsupervisor.supervise)": [[1, "thermostatsupervisor.supervise.supervisor", false]], "supervisor_loop() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.supervisor_loop", false]], "system_switch_position (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.system_switch_position", false]], "temp_value_with_units() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.temp_value_with_units", false]], "thermostat_basic_checkout() (in module thermostatsupervisor.thermostat_common)": [[1, "thermostatsupervisor.thermostat_common.thermostat_basic_checkout", false]], "thermostatclass (class in thermostatsupervisor.blink)": [[1, "thermostatsupervisor.blink.ThermostatClass", false]], "thermostatclass (class in thermostatsupervisor.emulator)": [[1, "thermostatsupervisor.emulator.ThermostatClass", false]], "thermostatclass (class in thermostatsupervisor.honeywell)": [[1, "thermostatsupervisor.honeywell.ThermostatClass", false]], "thermostatclass (class in thermostatsupervisor.kumocloud)": [[1, "thermostatsupervisor.kumocloud.ThermostatClass", false]], "thermostatclass (class in thermostatsupervisor.kumolocal)": [[1, "thermostatsupervisor.kumolocal.ThermostatClass", false]], "thermostatclass (class in thermostatsupervisor.mmm)": [[1, "thermostatsupervisor.mmm.ThermostatClass", false]], "thermostatclass (class in thermostatsupervisor.nest)": [[1, "thermostatsupervisor.nest.ThermostatClass", false]], "thermostatclass (class in thermostatsupervisor.sht31)": [[1, "thermostatsupervisor.sht31.ThermostatClass", false]], "thermostatcommon (class in thermostatsupervisor.thermostat_common)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommon", false]], "thermostatcommonzone (class in thermostatsupervisor.thermostat_common)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone", false]], "thermostatsupervisor": [[1, "module-thermostatsupervisor", false]], "thermostatsupervisor.blink": [[1, "module-thermostatsupervisor.blink", false]], "thermostatsupervisor.blink_config": [[1, "module-thermostatsupervisor.blink_config", false]], "thermostatsupervisor.email_notification": [[1, "module-thermostatsupervisor.email_notification", false]], "thermostatsupervisor.emulator": [[1, "module-thermostatsupervisor.emulator", false]], "thermostatsupervisor.emulator_config": [[1, "module-thermostatsupervisor.emulator_config", false]], "thermostatsupervisor.environment": [[1, "module-thermostatsupervisor.environment", false]], "thermostatsupervisor.flask_generic": [[1, "module-thermostatsupervisor.flask_generic", false]], "thermostatsupervisor.honeywell": [[1, "module-thermostatsupervisor.honeywell", false]], "thermostatsupervisor.honeywell_config": [[1, "module-thermostatsupervisor.honeywell_config", false]], "thermostatsupervisor.kumocloud": [[1, "module-thermostatsupervisor.kumocloud", false]], "thermostatsupervisor.kumocloud_config": [[1, "module-thermostatsupervisor.kumocloud_config", false]], "thermostatsupervisor.kumolocal": [[1, "module-thermostatsupervisor.kumolocal", false]], "thermostatsupervisor.kumolocal_config": [[1, "module-thermostatsupervisor.kumolocal_config", false]], "thermostatsupervisor.mmm": [[1, "module-thermostatsupervisor.mmm", false]], "thermostatsupervisor.mmm_config": [[1, "module-thermostatsupervisor.mmm_config", false]], "thermostatsupervisor.nest": [[1, "module-thermostatsupervisor.nest", false]], "thermostatsupervisor.nest_config": [[1, "module-thermostatsupervisor.nest_config", false]], "thermostatsupervisor.sht31": [[1, "module-thermostatsupervisor.sht31", false]], "thermostatsupervisor.sht31_config": [[1, "module-thermostatsupervisor.sht31_config", false]], "thermostatsupervisor.sht31_flask_server": [[1, "module-thermostatsupervisor.sht31_flask_server", false]], "thermostatsupervisor.supervise": [[1, "module-thermostatsupervisor.supervise", false]], "thermostatsupervisor.supervisor_flask_server": [[1, "module-thermostatsupervisor.supervisor_flask_server", false]], "thermostatsupervisor.thermostat_api": [[1, "module-thermostatsupervisor.thermostat_api", false]], "thermostatsupervisor.thermostat_common": [[1, "module-thermostatsupervisor.thermostat_common", false]], "thermostatsupervisor.utilities": [[1, "module-thermostatsupervisor.utilities", false]], "thermostatzone (class in thermostatsupervisor.blink)": [[1, "thermostatsupervisor.blink.ThermostatZone", false]], "thermostatzone (class in thermostatsupervisor.emulator)": [[1, "thermostatsupervisor.emulator.ThermostatZone", false]], "thermostatzone (class in thermostatsupervisor.honeywell)": [[1, "thermostatsupervisor.honeywell.ThermostatZone", false]], "thermostatzone (class in thermostatsupervisor.kumocloud)": [[1, "thermostatsupervisor.kumocloud.ThermostatZone", false]], "thermostatzone (class in thermostatsupervisor.kumolocal)": [[1, "thermostatsupervisor.kumolocal.ThermostatZone", false]], "thermostatzone (class in thermostatsupervisor.mmm)": [[1, "thermostatsupervisor.mmm.ThermostatZone", false]], "thermostatzone (class in thermostatsupervisor.nest)": [[1, "thermostatsupervisor.nest.ThermostatZone", false]], "thermostatzone (class in thermostatsupervisor.sht31)": [[1, "thermostatsupervisor.sht31.ThermostatZone", false]], "timeouthttpadapter (class in thermostatsupervisor.honeywell)": [[1, "thermostatsupervisor.honeywell.TimeoutHTTPAdapter", false]], "tolerance_degrees_default (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.tolerance_degrees_default", false]], "unknown_mode (thermostatsupervisor.thermostat_common.thermostatcommonzone attribute)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.UNKNOWN_MODE", false]], "update_runtime_parameters() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.update_runtime_parameters", false]], "userinputs (class in thermostatsupervisor.sht31_flask_server)": [[1, "thermostatsupervisor.sht31_flask_server.UserInputs", false]], "userinputs (class in thermostatsupervisor.thermostat_api)": [[1, "thermostatsupervisor.thermostat_api.UserInputs", false]], "userinputs (class in thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.UserInputs", false]], "utf8len() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.utf8len", false]], "validate_argv_inputs() (thermostatsupervisor.utilities.userinputs method)": [[1, "thermostatsupervisor.utilities.UserInputs.validate_argv_inputs", false]], "validate_numeric() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.validate_numeric", false]], "verify_current_mode() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.verify_current_mode", false]], "verify_required_env_variables() (in module thermostatsupervisor.thermostat_api)": [[1, "thermostatsupervisor.thermostat_api.verify_required_env_variables", false]], "warn_if_outside_global_limit() (thermostatsupervisor.thermostat_common.thermostatcommonzone method)": [[1, "thermostatsupervisor.thermostat_common.ThermostatCommonZone.warn_if_outside_global_limit", false]], "write_to_file() (in module thermostatsupervisor.utilities)": [[1, "thermostatsupervisor.utilities.write_to_file", false]]}, "objects": {"": [[1, 0, 0, "-", "thermostatsupervisor"]], "thermostatsupervisor": [[1, 0, 0, "-", "blink"], [1, 0, 0, "-", "blink_config"], [1, 0, 0, "-", "email_notification"], [1, 0, 0, "-", "emulator"], [1, 0, 0, "-", "emulator_config"], [1, 0, 0, "-", "environment"], [1, 0, 0, "-", "flask_generic"], [1, 0, 0, "-", "honeywell"], [1, 0, 0, "-", "honeywell_config"], [1, 0, 0, "-", "kumocloud"], [1, 0, 0, "-", "kumocloud_config"], [1, 0, 0, "-", "kumolocal"], [1, 0, 0, "-", "kumolocal_config"], [1, 0, 0, "-", "mmm"], [1, 0, 0, "-", "mmm_config"], [1, 0, 0, "-", "nest"], [1, 0, 0, "-", "nest_config"], [1, 0, 0, "-", "sht31"], [1, 0, 0, "-", "sht31_config"], [1, 0, 0, "-", "sht31_flask_server"], [1, 0, 0, "-", "supervise"], [1, 0, 0, "-", "supervisor_flask_server"], [1, 0, 0, "-", "thermostat_api"], [1, 0, 0, "-", "thermostat_common"], [1, 0, 0, "-", "utilities"]], "thermostatsupervisor.blink": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"]], "thermostatsupervisor.blink.ThermostatClass": [[1, 2, 1, "", "async_auth_start"], [1, 2, 1, "", "auth_start"], [1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_cameras"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "print_all_thermostat_metadata"]], "thermostatsupervisor.blink.ThermostatZone": [[1, 2, 1, "", "get_battery_status"], [1, 2, 1, "", "get_battery_voltage"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_wifi_status"], [1, 2, 1, "", "get_wifi_strength"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_defrosting"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "is_standby"]], "thermostatsupervisor.blink_config": [[1, 3, 1, "", "get_available_zones"]], "thermostatsupervisor.email_notification": [[1, 3, 1, "", "send_email_alert"]], "thermostatsupervisor.emulator": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"]], "thermostatsupervisor.emulator.ThermostatClass": [[1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "initialize_meta_data_dict"], [1, 2, 1, "", "print_all_thermostat_metadata"]], "thermostatsupervisor.emulator.ThermostatZone": [[1, 2, 1, "", "get_cool_setpoint"], [1, 2, 1, "", "get_cool_setpoint_raw"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_heat_setpoint"], [1, 2, 1, "", "get_heat_setpoint_raw"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_is_invacation_hold_mode"], [1, 2, 1, "", "get_parameter"], [1, 2, 1, "", "get_schedule_cool_sp"], [1, 2, 1, "", "get_schedule_heat_sp"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_vacation_hold"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "initialize_meta_data_dict"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_defrosting"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "is_standby"], [1, 2, 1, "", "refresh_zone_info"], [1, 2, 1, "", "set_cool_setpoint"], [1, 2, 1, "", "set_heat_setpoint"], [1, 2, 1, "", "set_mode"], [1, 2, 1, "", "set_parameter"]], "thermostatsupervisor.emulator_config": [[1, 3, 1, "", "get_available_zones"]], "thermostatsupervisor.environment": [[1, 3, 1, "", "convert_to_absolute_path"], [1, 3, 1, "", "dynamic_module_import"], [1, 3, 1, "", "get_env_variable"], [1, 3, 1, "", "get_local_ip"], [1, 3, 1, "", "get_package_path"], [1, 3, 1, "", "get_package_version"], [1, 3, 1, "", "get_parent_path"], [1, 3, 1, "", "get_python_version"], [1, 3, 1, "", "is_azure_environment"], [1, 3, 1, "", "is_interactive_environment"], [1, 3, 1, "", "is_raspberrypi_environment"], [1, 3, 1, "", "is_windows_environment"], [1, 3, 1, "", "load_all_env_variables"], [1, 3, 1, "", "set_env_variable"], [1, 3, 1, "", "show_package_version"]], "thermostatsupervisor.flask_generic": [[1, 3, 1, "", "initialize_ipban"], [1, 3, 1, "", "print_flask_config"], [1, 3, 1, "", "print_ipban_block_list"], [1, 3, 1, "", "print_ipban_block_list_with_timestamp"], [1, 3, 1, "", "schedule_ipban_block_list_report"], [1, 3, 1, "", "set_flask_cookie_config"]], "thermostatsupervisor.honeywell": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"], [1, 1, 1, "", "TimeoutHTTPAdapter"], [1, 3, 1, "", "get_zones_info_with_retries"]], "thermostatsupervisor.honeywell.ThermostatClass": [[1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_latestdata"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "get_ui_data"], [1, 2, 1, "", "get_ui_data_param"], [1, 2, 1, "", "get_zones_info"], [1, 2, 1, "", "print_all_thermostat_metadata"]], "thermostatsupervisor.honeywell.ThermostatZone": [[1, 2, 1, "", "get_battery_status"], [1, 2, 1, "", "get_battery_voltage"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_is_invacation_hold_mode"], [1, 2, 1, "", "get_schedule_cool_sp"], [1, 2, 1, "", "get_schedule_heat_sp"], [1, 2, 1, "", "get_setpoint_change_allowed"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_temporary_hold_until_time"], [1, 2, 1, "", "get_vacation_hold"], [1, 2, 1, "", "get_vacation_hold_until_time"], [1, 2, 1, "", "get_wifi_status"], [1, 2, 1, "", "get_wifi_strength"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_auto_mode"], [1, 2, 1, "", "is_fan_circulate_mode"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fan_on_mode"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "refresh_zone_info"], [1, 2, 1, "", "set_cool_setpoint"], [1, 2, 1, "", "set_heat_setpoint"]], "thermostatsupervisor.honeywell.TimeoutHTTPAdapter": [[1, 2, 1, "", "send"]], "thermostatsupervisor.honeywell_config": [[1, 3, 1, "", "get_available_zones"]], "thermostatsupervisor.kumocloud": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"]], "thermostatsupervisor.kumocloud.ThermostatClass": [[1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "get_zone_index_from_name"], [1, 2, 1, "", "print_all_thermostat_metadata"]], "thermostatsupervisor.kumocloud.ThermostatZone": [[1, 2, 1, "", "get_battery_status"], [1, 2, 1, "", "get_battery_voltage"], [1, 2, 1, "", "get_cool_setpoint"], [1, 2, 1, "", "get_cool_setpoint_raw"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_heat_setpoint"], [1, 2, 1, "", "get_heat_setpoint_raw"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_is_invacation_hold_mode"], [1, 2, 1, "", "get_parameter"], [1, 2, 1, "", "get_schedule_cool_sp"], [1, 2, 1, "", "get_schedule_heat_sp"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_vacation_hold"], [1, 2, 1, "", "get_wifi_status"], [1, 2, 1, "", "get_wifi_strength"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_defrosting"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "is_standby"], [1, 2, 1, "", "refresh_zone_info"], [1, 2, 1, "", "set_cool_setpoint"], [1, 2, 1, "", "set_heat_setpoint"]], "thermostatsupervisor.kumocloud_config": [[1, 3, 1, "", "get_available_zones"]], "thermostatsupervisor.kumolocal": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"]], "thermostatsupervisor.kumolocal.ThermostatClass": [[1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_kumocloud_thermostat_metadata"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "print_all_thermostat_metadata"]], "thermostatsupervisor.kumolocal.ThermostatZone": [[1, 2, 1, "", "get_cool_setpoint"], [1, 2, 1, "", "get_cool_setpoint_raw"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_heat_setpoint"], [1, 2, 1, "", "get_heat_setpoint_raw"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_is_invacation_hold_mode"], [1, 2, 1, "", "get_schedule_cool_sp"], [1, 2, 1, "", "get_schedule_heat_sp"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_vacation_hold"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_defrosting"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "is_standby"], [1, 2, 1, "", "refresh_zone_info"], [1, 2, 1, "", "set_cool_setpoint"], [1, 2, 1, "", "set_heat_setpoint"]], "thermostatsupervisor.kumolocal_config": [[1, 3, 1, "", "get_available_zones"]], "thermostatsupervisor.mmm": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"]], "thermostatsupervisor.mmm.ThermostatClass": [[1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_latestdata"], [1, 2, 1, "", "get_meta_data_dict"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "get_ui_data"], [1, 2, 1, "", "get_ui_data_param"], [1, 2, 1, "", "print_all_thermostat_metadata"]], "thermostatsupervisor.mmm.ThermostatZone": [[1, 2, 1, "", "get_cool_setpoint"], [1, 2, 1, "", "get_cool_setpoint_raw"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_heat_setpoint"], [1, 2, 1, "", "get_heat_setpoint_raw"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_is_invacation_hold_mode"], [1, 2, 1, "", "get_previous_days_setpoint"], [1, 2, 1, "", "get_schedule_cool_sp"], [1, 2, 1, "", "get_schedule_heat_sp"], [1, 2, 1, "", "get_schedule_program_cool"], [1, 2, 1, "", "get_schedule_program_heat"], [1, 2, 1, "", "get_schedule_setpoint"], [1, 2, 1, "", "get_setpoint_change_allowed"], [1, 2, 1, "", "get_setpoint_list"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_temporary_hold_until_time"], [1, 2, 1, "", "get_vacation_hold"], [1, 2, 1, "", "get_vacation_hold_until_time"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_defrosting"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "is_standby"], [1, 2, 1, "", "set_cool_setpoint"], [1, 2, 1, "", "set_heat_setpoint"]], "thermostatsupervisor.mmm_config": [[1, 3, 1, "", "get_available_zones"]], "thermostatsupervisor.nest": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"]], "thermostatsupervisor.nest.ThermostatClass": [[1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_device_data"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "print_all_thermostat_metadata"], [1, 2, 1, "", "reautherize_callback"], [1, 2, 1, "", "refresh_oauth_token"]], "thermostatsupervisor.nest.ThermostatZone": [[1, 2, 1, "", "get_battery_status"], [1, 2, 1, "", "get_battery_voltage"], [1, 2, 1, "", "get_cool_setpoint"], [1, 2, 1, "", "get_cool_setpoint_raw"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_heat_setpoint"], [1, 2, 1, "", "get_heat_setpoint_raw"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_is_invacation_hold_mode"], [1, 2, 1, "", "get_safety_temperature"], [1, 2, 1, "", "get_schedule_cool_sp"], [1, 2, 1, "", "get_schedule_heat_sp"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_trait"], [1, 2, 1, "", "get_vacation_hold"], [1, 2, 1, "", "get_wifi_status"], [1, 2, 1, "", "get_wifi_strength"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "refresh_zone_info"], [1, 2, 1, "", "send_cmd"], [1, 2, 1, "", "set_cool_setpoint"], [1, 2, 1, "", "set_heat_setpoint"]], "thermostatsupervisor.nest_config": [[1, 3, 1, "", "get_available_zones"]], "thermostatsupervisor.sht31": [[1, 1, 1, "", "ThermostatClass"], [1, 1, 1, "", "ThermostatZone"]], "thermostatsupervisor.sht31.ThermostatClass": [[1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_env_key"], [1, 2, 1, "", "get_ip_address"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_target_zone_id"], [1, 2, 1, "", "print_all_thermostat_metadata"], [1, 2, 1, "", "spawn_flask_server"]], "thermostatsupervisor.sht31.ThermostatZone": [[1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_wifi_status"], [1, 2, 1, "", "get_wifi_strength"], [1, 2, 1, "", "get_zone_name"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_defrosting"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fan_on"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_power_on"], [1, 2, 1, "", "is_standby"], [1, 2, 1, "", "refresh_zone_info"]], "thermostatsupervisor.sht31_config": [[1, 3, 1, "", "get_available_zones"], [1, 3, 1, "", "get_preferred_zone"]], "thermostatsupervisor.sht31_flask_server": [[1, 1, 1, "", "ClearFaultRegister"], [1, 1, 1, "", "Controller"], [1, 1, 1, "", "ControllerUnit"], [1, 1, 1, "", "DisableHeater"], [1, 1, 1, "", "EnableHeater"], [1, 1, 1, "", "I2CDetect"], [1, 1, 1, "", "I2CDetectBus0"], [1, 1, 1, "", "I2CDetectBus1"], [1, 1, 1, "", "I2CRecovery"], [1, 1, 1, "", "ReadFaultRegister"], [1, 1, 1, "", "Reset"], [1, 1, 1, "", "Sensors"], [1, 1, 1, "", "SoftReset"], [1, 1, 1, "", "UserInputs"], [1, 3, 1, "", "create_app"], [1, 3, 1, "", "favicon"]], "thermostatsupervisor.sht31_flask_server.ClearFaultRegister": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.Controller": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.ControllerUnit": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.DisableHeater": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.EnableHeater": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.I2CDetect": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.I2CDetectBus0": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.I2CDetectBus1": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.I2CRecovery": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.ReadFaultRegister": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.Reset": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.Sensors": [[1, 2, 1, "", "convert_data"], [1, 2, 1, "", "get"], [1, 2, 1, "", "get_iwconfig_wifi_strength"], [1, 2, 1, "", "get_iwlist_wifi_strength"], [1, 2, 1, "", "get_unit_test"], [1, 2, 1, "", "i2c_detect"], [1, 2, 1, "", "i2c_recovery"], [1, 2, 1, "", "pack_data_structure"], [1, 2, 1, "", "parse_fault_register_data"], [1, 2, 1, "", "read_i2c_data"], [1, 2, 1, "", "send_cmd_get_diag"], [1, 2, 1, "", "send_i2c_cmd"], [1, 2, 1, "", "set_sht31_address"], [1, 2, 1, "", "shell_cmd"]], "thermostatsupervisor.sht31_flask_server.SoftReset": [[1, 4, 1, "", "endpoint"], [1, 2, 1, "", "get"], [1, 2, 1, "", "mediatypes"], [1, 4, 1, "", "methods"]], "thermostatsupervisor.sht31_flask_server.UserInputs": [[1, 2, 1, "", "initialize_user_inputs"]], "thermostatsupervisor.supervise": [[1, 3, 1, "", "exec_supervise"], [1, 3, 1, "", "supervisor"]], "thermostatsupervisor.supervisor_flask_server": [[1, 3, 1, "", "create_app"], [1, 3, 1, "", "favicon"], [1, 3, 1, "", "index"]], "thermostatsupervisor.thermostat_api": [[1, 1, 1, "", "UserInputs"], [1, 3, 1, "", "load_hardware_library"], [1, 3, 1, "", "load_user_inputs"], [1, 3, 1, "", "verify_required_env_variables"]], "thermostatsupervisor.thermostat_api.UserInputs": [[1, 2, 1, "", "dynamic_update_user_inputs"], [1, 2, 1, "", "initialize_user_inputs"], [1, 2, 1, "", "max_measurement_count_exceeded"]], "thermostatsupervisor.thermostat_common": [[1, 5, 1, "", "AuthenticationError"], [1, 1, 1, "", "ThermostatCommon"], [1, 1, 1, "", "ThermostatCommonZone"], [1, 3, 1, "", "create_thermostat_instance"], [1, 3, 1, "", "get_battery_status_display"], [1, 3, 1, "", "get_wifi_status_display"], [1, 3, 1, "", "print_select_data_from_all_zones"], [1, 3, 1, "", "thermostat_basic_checkout"]], "thermostatsupervisor.thermostat_common.ThermostatCommon": [[1, 2, 1, "", "exec_print_all_thermostat_metadata"], [1, 2, 1, "", "get_all_metadata"], [1, 2, 1, "", "get_metadata"], [1, 2, 1, "", "print_all_thermostat_metadata"]], "thermostatsupervisor.thermostat_common.ThermostatCommonZone": [[1, 4, 1, "", "AUTO_MODE"], [1, 4, 1, "", "COOL_MODE"], [1, 4, 1, "", "DRY_MODE"], [1, 4, 1, "", "FAN_MODE"], [1, 4, 1, "", "HEAT_MODE"], [1, 4, 1, "", "OFF_MODE"], [1, 4, 1, "", "UNKNOWN_MODE"], [1, 4, 1, "", "controlled_modes"], [1, 4, 1, "", "cool_modes"], [1, 2, 1, "", "display_basic_thermostat_summary"], [1, 2, 1, "", "display_runtime_settings"], [1, 2, 1, "", "display_session_settings"], [1, 2, 1, "", "function_not_supported"], [1, 2, 1, "", "get_battery_status"], [1, 2, 1, "", "get_battery_voltage"], [1, 2, 1, "", "get_cool_setpoint"], [1, 2, 1, "", "get_cool_setpoint_raw"], [1, 2, 1, "", "get_current_mode"], [1, 2, 1, "", "get_display_humidity"], [1, 2, 1, "", "get_display_temp"], [1, 2, 1, "", "get_heat_setpoint"], [1, 2, 1, "", "get_heat_setpoint_raw"], [1, 2, 1, "", "get_is_humidity_supported"], [1, 2, 1, "", "get_is_invacation_hold_mode"], [1, 2, 1, "", "get_schedule_cool_sp"], [1, 2, 1, "", "get_schedule_heat_sp"], [1, 2, 1, "", "get_schedule_program_cool"], [1, 2, 1, "", "get_schedule_program_heat"], [1, 2, 1, "", "get_system_switch_position"], [1, 2, 1, "", "get_temporary_hold_until_time"], [1, 2, 1, "", "get_vacation_hold"], [1, 2, 1, "", "get_vacation_hold_until_time"], [1, 2, 1, "", "get_wifi_status"], [1, 2, 1, "", "get_wifi_strength"], [1, 4, 1, "", "heat_modes"], [1, 2, 1, "", "is_auto"], [1, 2, 1, "", "is_auto_mode"], [1, 2, 1, "", "is_controlled_mode"], [1, 2, 1, "", "is_cool_deviation"], [1, 2, 1, "", "is_cool_mode"], [1, 2, 1, "", "is_cooling"], [1, 2, 1, "", "is_dry_mode"], [1, 2, 1, "", "is_drying"], [1, 2, 1, "", "is_fan_mode"], [1, 2, 1, "", "is_fanning"], [1, 2, 1, "", "is_heat_deviation"], [1, 2, 1, "", "is_heat_mode"], [1, 2, 1, "", "is_heating"], [1, 2, 1, "", "is_off_mode"], [1, 2, 1, "", "is_temp_deviated_from_schedule"], [1, 4, 1, "", "max_scheduled_heat_allowed"], [1, 2, 1, "", "measure_thermostat_repeatability"], [1, 4, 1, "", "min_scheduled_cool_allowed"], [1, 2, 1, "", "query_thermostat_zone"], [1, 2, 1, "", "refresh_zone_info"], [1, 2, 1, "", "report_heating_parameters"], [1, 2, 1, "", "revert_temperature_deviation"], [1, 2, 1, "", "revert_thermostat_mode"], [1, 2, 1, "", "set_cool_setpoint"], [1, 2, 1, "", "set_heat_setpoint"], [1, 2, 1, "", "set_mode"], [1, 2, 1, "", "store_current_mode"], [1, 2, 1, "", "supervisor_loop"], [1, 4, 1, "", "system_switch_position"], [1, 4, 1, "", "tolerance_degrees_default"], [1, 2, 1, "", "update_runtime_parameters"], [1, 2, 1, "", "validate_numeric"], [1, 2, 1, "", "verify_current_mode"], [1, 2, 1, "", "warn_if_outside_global_limit"]], "thermostatsupervisor.utilities": [[1, 1, 1, "", "UserInputs"], [1, 3, 1, "", "c_to_f"], [1, 3, 1, "", "f_to_c"], [1, 3, 1, "", "get_file_size_bytes"], [1, 3, 1, "", "get_full_file_path"], [1, 3, 1, "", "get_function_name"], [1, 3, 1, "", "get_key_from_value"], [1, 3, 1, "", "humidity_value_with_units"], [1, 3, 1, "", "is_host_on_local_net"], [1, 3, 1, "", "log_msg"], [1, 3, 1, "", "log_rotate_file"], [1, 3, 1, "", "temp_value_with_units"], [1, 3, 1, "", "utf8len"], [1, 3, 1, "", "write_to_file"]], "thermostatsupervisor.utilities.UserInputs": [[1, 2, 1, "", "dynamic_update_user_inputs"], [1, 2, 1, "", "get_sflag_list"], [1, 2, 1, "", "get_user_inputs"], [1, 2, 1, "", "initialize_user_inputs"], [1, 2, 1, "", "is_lambda_bool"], [1, 2, 1, "", "is_valid_file"], [1, 2, 1, "", "parse_argv_list"], [1, 2, 1, "", "parse_input_file"], [1, 2, 1, "", "parse_named_arguments"], [1, 2, 1, "", "parse_runtime_parameters"], [1, 2, 1, "", "set_user_inputs"], [1, 2, 1, "", "validate_argv_inputs"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:exception"}, "terms": {"": 1, "0": 1, "0x7e": 1, "1": 1, "10": 1, "123456789": 1, "123456790": 1, "123456791": 1, "123456792": 1, "123456793": 1, "123456794": 1, "123456795": 1, "192": 1, "2": 1, "22": 1, "24": 1, "3": 1, "30": 1, "3m50": 1, "3rd": 1, "4": 1, "465": 1, "49": 1, "491111619745176": 1, "55024032959489": 1, "6": 1, "628": 1, "64963": 1, "68": 1, "7": 1, "74": 1, "8": 1, "88": 1, "For": 1, "If": 1, "It": 1, "The": 1, "_": 1, "__": 1, "ab": 1, "abov": 1, "absolut": 1, "access": 1, "activ": 1, "add": [1, 2], "add_url_rul": 1, "addit": 1, "addr_pin": 1, "address": 1, "addressfamili": 1, "af_inet": 1, "after": 1, "against": 1, "agent": 1, "aka": 1, "alert": 1, "alert_pin": 1, "algo": 1, "algorithm": 1, "alia": 1, "all": 1, "allow": 1, "also": 1, "alwai": 1, "an": 1, "ani": 1, "api": 1, "app": 1, "appli": 1, "ar": 1, "arg": 1, "argument": 1, "argv": 1, "argv_dict": 1, "argv_list": 1, "associ": 1, "assum": 1, "async": 1, "async_auth_start": [0, 1], "attack": 1, "attempt": 1, "attribut": 1, "auth_start": [0, 1], "authent": 1, "authenticationerror": [0, 1], "author": 1, "authorization_url": 1, "auto": 1, "auto_mod": [0, 1], "avail": 1, "axlan": 1, "azur": 1, "base": 1, "basic": 1, "batteri": 1, "battery_statu": 1, "been": 1, "befor": 1, "being": 1, "below": 1, "between": 1, "bit": 1, "blink": 0, "blink_config": 0, "blink_debug": 0, "blinkpi": 1, "block": 1, "bodi": 1, "bool": 1, "boolean": 1, "browser": 1, "bu": 1, "build": 1, "bundl": 1, "byte": 1, "c": 1, "c_to_f": [0, 1], "ca": 1, "cach": 1, "calcul": 1, "call": 1, "callabl": 1, "callback": 1, "caller": 1, "camera": 1, "can": 1, "case": 1, "caught": 1, "celciu": 1, "cell": 1, "celsiu": 1, "cert": 1, "certif": 1, "chang": 1, "charact": 1, "check": 1, "checkout": 1, "checksum": 1, "child": 1, "child_kei": 1, "choic": 1, "circul": 1, "cl": 1, "class": 1, "classvar": 1, "clear": 1, "clearfaultregist": [0, 1], "client": 1, "clock": 1, "cmd_lst": 1, "cmd_name": 1, "code": 1, "collect": 1, "com": 1, "command": 1, "common": 1, "compat": 1, "complet": 1, "config": 1, "config_mod": 1, "configur": 1, "confirm": 1, "connect": 1, "consol": 1, "consum": 1, "contain": 1, "content": [0, 2], "control": [0, 1], "controlled_mod": [0, 1], "controllerunit": [0, 1], "convert": 1, "convert_data": [0, 1], "convert_to_absolute_path": [0, 1], "cooki": 1, "cool": 1, "cool_mod": [0, 1], "correspond": 1, "count": 1, "creat": 1, "create_app": [0, 1], "create_thermostat_inst": [0, 1], "credenti": 1, "criteria": 1, "critic": 1, "current": 1, "cycl": 1, "dai": 1, "data": 1, "datatyp": 1, "dbm": 1, "debug": 1, "debug_mod": 1, "decim": 1, "default": 1, "default_v": 1, "default_zon": 1, "defin": 1, "defrost": 1, "degre": 1, "delai": 1, "denot": 1, "depend": 1, "descript": 1, "desir": 1, "destin": 1, "detail": [1, 2], "detect": 1, "determin": 1, "develop": 1, "deviat": 1, "devic": 1, "device_id": 1, "diagnost": 1, "dict": 1, "dictionari": 1, "digit": 1, "disabl": 1, "disableheat": [0, 1], "disp_unit": 1, "displai": 1, "display_basic_thermostat_summari": [0, 1], "display_batteri": 1, "display_runtime_set": [0, 1], "display_session_set": [0, 1], "display_vers": 1, "display_wifi": 1, "disposit": 1, "disptemperatur": 1, "dry": 1, "dry_mod": [0, 1], "dure": 1, "dynam": 1, "dynamic_module_import": [0, 1], "dynamic_update_user_input": [0, 1], "e": 1, "each": 1, "either": 1, "elaps": 1, "element": 1, "elif": 1, "els": 1, "email": 1, "email_notif": 0, "empti": 1, "emul": 0, "emulator_config": 0, "enabl": 1, "enableheat": [0, 1], "endpoint": [0, 1], "energi": 1, "entir": 1, "env": 1, "env_kei": 1, "env_vari": 1, "environ": 0, "error": 1, "etc": 1, "everyth": 1, "exact": 1, "exampl": 1, "except": 1, "exec_print_all_thermostat_metadata": [0, 1], "exec_supervis": [0, 1], "execut": 1, "exist": 1, "expand": 1, "expect": 1, "expir": 1, "explan": 1, "extend": 1, "extens": 1, "f": 1, "f_to_c": [0, 1], "fabric": 1, "fahrenheit": 1, "fail": 1, "fals": 1, "famili": 1, "fan": 1, "fan_mod": [0, 1], "fault": 1, "favicon": [0, 1], "faviocon": 1, "fd": 1, "fehrenheit": 1, "fetch": 1, "field": 1, "file": 1, "file_nam": 1, "file_size_byt": 1, "find": 1, "first": 1, "flag": 1, "flag_all_devi": 1, "flask": 1, "flask_gener": 0, "float": 1, "folder": 1, "follow": 1, "force_refresh": 1, "found": 1, "from": 1, "from_address": 1, "from_password": 1, "full": 1, "full_path": 1, "func": 1, "func_nam": 1, "function": 1, "function_not_support": [0, 1], "g": 1, "gener": 1, "get": [0, 1], "get_all_metadata": [0, 1], "get_available_zon": [0, 1], "get_battery_statu": [0, 1], "get_battery_status_displai": [0, 1], "get_battery_voltag": [0, 1], "get_camera": [0, 1], "get_cool_setpoint": [0, 1], "get_cool_setpoint_raw": [0, 1], "get_current_mod": [0, 1], "get_device_data": [0, 1], "get_display_humid": [0, 1], "get_display_temp": [0, 1], "get_env_kei": [0, 1], "get_env_vari": [0, 1], "get_file_size_byt": [0, 1], "get_full_file_path": [0, 1], "get_function_nam": [0, 1], "get_heat_setpoint": [0, 1], "get_heat_setpoint_raw": [0, 1], "get_ip_address": [0, 1], "get_is_humidity_support": [0, 1], "get_is_invacation_hold_mod": [0, 1], "get_iwconfig_wifi_strength": [0, 1], "get_iwlist_wifi_strength": [0, 1], "get_key_from_valu": [0, 1], "get_kumocloud_thermostat_metadata": [0, 1], "get_latestdata": [0, 1], "get_local_ip": [0, 1], "get_meta_data_dict": [0, 1], "get_metadata": [0, 1], "get_package_path": [0, 1], "get_package_vers": [0, 1], "get_paramet": [0, 1], "get_parent_path": [0, 1], "get_preferred_zon": [0, 1], "get_previous_days_setpoint": [0, 1], "get_python_vers": [0, 1], "get_safety_temperatur": [0, 1], "get_schedule_cool_sp": [0, 1], "get_schedule_heat_sp": [0, 1], "get_schedule_program_cool": [0, 1], "get_schedule_program_heat": [0, 1], "get_schedule_setpoint": [0, 1], "get_setpoint_change_allow": [0, 1], "get_setpoint_list": [0, 1], "get_sflag_list": [0, 1], "get_system_switch_posit": [0, 1], "get_target_zone_id": [0, 1], "get_temporary_hold_until_tim": [0, 1], "get_trait": [0, 1], "get_ui_data": [0, 1], "get_ui_data_param": [0, 1], "get_unit_test": [0, 1], "get_user_input": [0, 1], "get_vacation_hold": [0, 1], "get_vacation_hold_until_tim": [0, 1], "get_wifi_statu": [0, 1], "get_wifi_status_displai": [0, 1], "get_wifi_strength": [0, 1], "get_zone_index_from_nam": [0, 1], "get_zone_nam": [0, 1], "get_zones_info": [0, 1], "get_zones_info_with_retri": [0, 1], "gethostbyaddr": 1, "github": 1, "give": 1, "global": 1, "gmail": 1, "gmail_password": 1, "gmail_usernam": 1, "go": 1, "googl": 1, "grandparent_kei": 1, "gt": 1, "ha": 1, "hack": 1, "handl": 1, "hard": 1, "hardwar": 1, "have": 1, "head": 1, "heat": 1, "heat_mod": [0, 1], "heater": 1, "help": 1, "help_descript": 1, "hold": 1, "honeywel": 0, "honeywell_config": 0, "host": 1, "host_nam": 1, "hostnam": 1, "hour": 1, "how": 1, "http": 1, "httpadapt": 1, "humid": 1, "humidity_lst": 1, "humidity_value_with_unit": [0, 1], "hvac": 1, "hyphen": 1, "i": 1, "i2c": 1, "i2c_addr": 1, "i2c_command": 1, "i2c_detect": [0, 1], "i2c_recoveri": [0, 1], "i2cdetect": [0, 1], "i2cdetectbus0": [0, 1], "i2cdetectbus1": [0, 1], "i2crecoveri": [0, 1], "iancoleman": 1, "id": 1, "identifi": 1, "ignor": 1, "import": 1, "includ": 1, "index": [0, 1], "indoor": 1, "indoorhumid": 1, "info": 1, "inform": 1, "initi": 1, "initialize_ipban": [0, 1], "initialize_meta_data_dict": [0, 1], "initialize_user_input": [0, 1], "input": 1, "input_dict": 1, "input_fil": 1, "input_str": 1, "input_typ": 1, "input_v": 1, "instal": 1, "instanc": 1, "instead": 1, "int": 1, "integr": 1, "interest": 1, "internet": 1, "introduct": 1, "io": 1, "ip": 1, "ip_address": 1, "ip_ban": 1, "ipban": 1, "is_auto": [0, 1], "is_auto_mod": [0, 1], "is_azure_environ": [0, 1], "is_controlled_mod": [0, 1], "is_cool": [0, 1], "is_cool_devi": [0, 1], "is_cool_mod": [0, 1], "is_defrost": [0, 1], "is_dri": [0, 1], "is_dry_mod": [0, 1], "is_fan": [0, 1], "is_fan_auto_mod": [0, 1], "is_fan_circulate_mod": [0, 1], "is_fan_mod": [0, 1], "is_fan_on": [0, 1], "is_fan_on_mod": [0, 1], "is_heat": [0, 1], "is_heat_devi": [0, 1], "is_heat_mod": [0, 1], "is_host_on_local_net": [0, 1], "is_interactive_environ": [0, 1], "is_lambda_bool": [0, 1], "is_off_mod": [0, 1], "is_power_on": [0, 1], "is_raspberrypi_environ": [0, 1], "is_standbi": [0, 1], "is_temp_deviated_from_schedul": [0, 1], "is_valid_fil": [0, 1], "is_windows_environ": [0, 1], "isinvacationholdmod": 1, "issu": 1, "iwconfig": 1, "iwlist": 1, "json": 1, "just": 1, "k": 1, "kei": 1, "known": 1, "kumocloud": 0, "kumocloud_config": 0, "kumocloudaccount": 1, "kumoloc": 0, "kumolocal_config": 0, "kwarg": 1, "label": 1, "laddr": 1, "lambda": 1, "larg": 1, "last": 1, "latest": 1, "least": 1, "leav": 1, "length": 1, "level": 1, "lflag": 1, "librari": 1, "limit": 1, "limit_valu": 1, "line": 1, "list": 1, "load": 1, "load_all_env_vari": [0, 1], "load_hardware_librari": [0, 1], "load_user_input": [0, 1], "local": 1, "lock": 1, "log": 1, "log_msg": [0, 1], "log_rotate_fil": [0, 1], "long": 1, "loop": 1, "lt": 1, "machin": 1, "mai": 1, "major": 1, "manag": 1, "map": 1, "mask": 1, "match": 1, "max": 1, "max_measurement_count_exceed": [0, 1], "max_scheduled_heat_allow": [0, 1], "max_size_byt": 1, "mean": 1, "measur": 1, "measure_response_tim": 1, "measure_thermostat_repeat": [0, 1], "mediatyp": [0, 1], "memori": 1, "messag": 1, "meta": 1, "metadata": 1, "method": [0, 1], "min": 1, "min_major_vers": 1, "min_minor_vers": 1, "min_scheduled_cool_allow": [0, 1], "minor": 1, "minut": 1, "mmm": 0, "mmm_config": 0, "mod": 1, "mode": 1, "modul": 0, "mondai": 1, "monitor": 1, "more": 1, "msg": 1, "multi": 1, "must": 1, "name": 1, "necessari": 1, "need": 1, "nest": 0, "nest_config": 0, "net": 1, "network": 1, "new": 1, "nois": 1, "non": 1, "none": 1, "notif": 1, "number": 1, "numer": 1, "oauth": 1, "oauth2": 1, "obj": 1, "object": 1, "off": 1, "off_mod": [0, 1], "onc": 1, "one": 1, "onli": 1, "open": 1, "oper": 1, "option": 1, "order": 1, "org": 1, "other": 1, "otherwis": 1, "out": 1, "outag": 1, "output": 1, "outsid": 1, "over": 1, "overrid": 1, "overridden": 1, "pack": 1, "pack_data_structur": [0, 1], "packag": 0, "page": 1, "pair": 1, "par_nam": 1, "par_valu": 1, "param": 1, "parament": 1, "paramet": 1, "parameter_nam": 1, "parent": 1, "parent_kei": 1, "pars": 1, "parse_argv_list": [0, 1], "parse_fault_register_data": [0, 1], "parse_input_fil": [0, 1], "parse_named_argu": [0, 1], "parse_runtime_paramet": [0, 1], "parti": 1, "particular": 1, "pass": 1, "password": 1, "path": 1, "pc": 1, "perform": 1, "php": 1, "pi": 1, "pibit": 1, "pin": 1, "pipelin": 1, "pkg": 1, "point": 1, "poll": 1, "poll_count": 1, "poll_interval_sec": 1, "popul": 1, "port": 1, "posit": 1, "possibl": 1, "power": 1, "precis": 1, "prefer": 1, "preparedrequest": 1, "present": 1, "prevent": 1, "primari": 1, "print": 1, "print_all_thermostat_metadata": [0, 1], "print_flask_config": [0, 1], "print_ipban_block_list": [0, 1], "print_ipban_block_list_with_timestamp": [0, 1], "print_select_data_from_all_zon": [0, 1], "print_statu": 1, "product": 1, "program": 1, "project": 1, "protect": 1, "proto": 1, "provid": 1, "proxi": 1, "py": 1, "pyhtcc": 1, "pykumo": 1, "pypi": 1, "python": 1, "queri": 1, "query_thermostat_zon": [0, 1], "rais": 1, "random": 1, "raspberri": 1, "raw": 1, "re": 1, "reach": 1, "read": 1, "read_i2c_data": [0, 1], "readfaultregist": [0, 1], "real": 1, "reauther": 1, "reautherize_callback": [0, 1], "recoveri": 1, "ref": 1, "refer": 1, "refresh": 1, "refresh_oauth_token": [0, 1], "refresh_zone_info": [0, 1], "regist": 1, "rel": 1, "relai": 1, "relative_path": 1, "remot": 1, "repeat": 1, "repeatabilti": 1, "report": 1, "report_heating_paramet": [0, 1], "reportedcondit": 1, "repres": 1, "request": 1, "requir": 1, "reset": [0, 1], "resourc": 1, "resourcewarn": 1, "respons": 1, "rest": 1, "restructuredtext": 2, "result": 1, "retri": 1, "return": 1, "revert": 1, "revert_temperature_devi": [0, 1], "revert_thermostat_mod": [0, 1], "rh": 1, "rotat": 1, "rout": 1, "rssi": 1, "rssi_lst": 1, "run": 1, "runtim": 1, "safeti": 1, "same": 1, "save": 1, "schedul": 1, "schedule_ipban_block_list_report": [0, 1], "scl": 1, "screen": 1, "script": 1, "sechdul": 1, "second": 1, "secondari": 1, "section": 1, "see": [1, 2], "seed": 1, "select": 1, "self": 1, "send": [0, 1], "send_cmd": [0, 1], "send_cmd_get_diag": [0, 1], "send_email_alert": [0, 1], "send_i2c_cmd": [0, 1], "sensor": [0, 1], "sent": 1, "sequenc": 1, "server": 1, "server_port": 1, "server_url": 1, "servic": 1, "session": 1, "session_count": 1, "set": 1, "set_cool_setpoint": [0, 1], "set_env_vari": [0, 1], "set_flask_cookie_config": [0, 1], "set_heat_setpoint": [0, 1], "set_mod": [0, 1], "set_paramet": [0, 1], "set_sht31_address": [0, 1], "set_user_input": [0, 1], "setpoint": 1, "setpointchangeallow": 1, "setup": 1, "sflag": 1, "shell": 1, "shell_cmd": [0, 1], "short": 1, "should": 1, "show_package_vers": [0, 1], "sht31": 0, "sht31_config": 0, "sht31_flask_serv": 0, "signal": 1, "signatur": 1, "singl": 1, "site": 1, "size": 1, "smbu": 1, "smtp": 1, "so": 1, "sock_dgram": 1, "socket": 1, "socketkind": 1, "soft": 1, "softreset": [0, 1], "some": 1, "sometim": 1, "sourc": 1, "source_path": 1, "sp_dict": 1, "spawn": 1, "spawn_flask_serv": [0, 1], "speci5fi": 1, "specif": 1, "specifi": 1, "ssl": 1, "stack": 1, "stack_val": 1, "stack_valu": 1, "standbi": 1, "start": 1, "stat": 1, "statist": 1, "statu": 1, "std": 1, "stdio": 1, "stdout": 1, "store_current_mod": [0, 1], "str": 1, "stream": 1, "strength": 1, "string": 1, "structur": 1, "subject": 1, "submodul": 0, "success": 1, "summari": 1, "supervis": 0, "supervisor": [0, 1], "supervisor_flask_serv": 0, "supervisor_loop": [0, 1], "support": 1, "supported_config": 1, "suppress_warn": 1, "switch": 1, "switch_posit": 1, "sy": 1, "syntax": [1, 2], "system": 1, "system_switch_posit": [0, 1], "system_swtich": 1, "systemswitchposit": 1, "t": 1, "t_cool": 1, "t_heat": 1, "tab": 1, "target": 1, "target_mod": 1, "target_v": 1, "tbd": 1, "tc": 1, "temp": 1, "temp_c": 1, "temp_c_lst": 1, "temp_f": 1, "temp_f_lst": 1, "temp_value_with_unit": [0, 1], "tempc": 1, "temperatur": 1, "tempf": 1, "temporari": 1, "temporaryholduntiltim": 1, "termin": 1, "test": 1, "text": 1, "thermal": 1, "thermomet": 1, "thermostat": 1, "thermostat_api": 0, "thermostat_basic_checkout": [0, 1], "thermostat_common": 0, "thermostat_obj": 1, "thermostat_typ": 1, "thermostatclass": [0, 1], "thermostatcommon": [0, 1], "thermostatcommonzon": [0, 1], "thermostatzon": [0, 1], "thermoststat": 1, "thi": 1, "through": 1, "throw": 1, "thru": 1, "time": 1, "timeout": 1, "timeouthttpadapt": [0, 1], "timer": 1, "timestamp": 1, "tl": 1, "to_address": 1, "todai": 1, "todo": 1, "token": 1, "tolerance_degrees_default": [0, 1], "too": 1, "top": 1, "totalconnectcomfort": 1, "trait": 1, "trait_nam": 1, "true": 1, "trust": 1, "trustworthi": 1, "tstat": 1, "tupl": 1, "turn": 1, "type": 1, "typeerror": 1, "ui": 1, "uidata": 1, "uip": 1, "un": 1, "unabl": 1, "unclos": 1, "unit": 1, "unittest": 1, "unknown": 1, "unknown_mod": [0, 1], "unsupport": 1, "until": 1, "unus": 1, "up": 1, "updat": 1, "update_runtime_paramet": [0, 1], "upon": 1, "url": 1, "urllib3": 1, "us": [1, 2], "user": 1, "user_input": 1, "userinput": [0, 1], "utf8len": [0, 1], "util": 0, "vacat": 1, "vacationhold": 1, "vacationholduntiltim": 1, "val": 1, "valid": 1, "validate_argv_input": [0, 1], "validate_numer": [0, 1], "valu": 1, "valueerror": 1, "var": 1, "variabl": 1, "variou": 1, "vector": 1, "verbos": 1, "verifi": 1, "verify_current_mod": [0, 1], "verify_required_env_vari": [0, 1], "version": 1, "via": 1, "view": 1, "volt": 1, "voltag": 1, "wai": 1, "wait": 1, "warn": 1, "warn_if_outside_global_limit": [0, 1], "we": 1, "web": 1, "week": 1, "whether": 1, "which": 1, "wifi": 1, "wifi_statu": 1, "window": 1, "within": 1, "write": 1, "write_to_fil": [0, 1], "written": 1, "www": 1, "your": 2, "zone": 1, "zone_data": 1, "zone_info": 1, "zone_lst": 1, "zone_nam": 1, "zone_numb": 1, "zone_str": 1}, "titles": ["thermostatsupervisor", "thermostatsupervisor package", "ThermostatSupervisor documentation"], "titleterms": {"blink": 1, "blink_config": 1, "blink_debug": 1, "content": 1, "document": 2, "email_notif": 1, "emul": 1, "emulator_config": 1, "environ": 1, "flask_gener": 1, "honeywel": 1, "honeywell_config": 1, "kumocloud": 1, "kumocloud_config": 1, "kumoloc": 1, "kumolocal_config": 1, "mmm": 1, "mmm_config": 1, "modul": 1, "nest": 1, "nest_config": 1, "packag": 1, "sht31": 1, "sht31_config": 1, "sht31_flask_serv": 1, "submodul": 1, "supervis": 1, "supervisor_flask_serv": 1, "thermostat_api": 1, "thermostat_common": 1, "thermostatsupervisor": [0, 1, 2], "util": 1}})